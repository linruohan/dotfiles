// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
    {
        "context": "Workspace",

        "bindings": {
            "ctrl p": "file_finder::Toggle"
        }
    },

    {
        "context": "Editor",

        "bindings": {
            "j k": ["workspace::SendKeystrokes", "escape"]
        }
    },
    {
        "bindings": {
            "ctrl-shift-p": "command_palette::Toggle",
            "ctrl-shift-k": "zed::OpenKeymap",
            "ctrl-shift-x": "zed::Extensions",
            "f11": "zed::ToggleFullScreen",
            "ctrl-alt-n": "task::Spawn",
            "ctrl-alt-r": "task::Rerun",
            "ctrl-alt-o": "zed::OpenTasks", //"zed::OpenLocalTasks",
            "ctrl-\\": "workspace::NewCenterTerminal",
            "ctrl-t": "terminal_panel::ToggleFocus"
        }
    },
    {
        "context": "Workspace",
        "bindings": {
            "shift shift": "workspace::NewSearch"
        }
    },
    {
        "context": "Editor",
        "bindings": {
            "ctrl-a": "editor::SelectAll",
            "ctrl-w": "pane::CloseActiveItem",
            "alt-enter": "editor::ToggleCodeActions"
        }
    },
    {
        "context": "Editor && VimControl && !VimWaiting && !menu",
        "bindings": {
            "H": "pane::ActivatePreviousItem",
            "L": "pane::ActivateNextItem",
            "K": "editor::Hover",
            "g h": "editor::MoveToBeginningOfLine",
            "g l": "editor::MoveToEndOfLine",
            "g b": "pane::GoBack",
            "g d": "editor::GoToTypeDefinition",
            "g i": "editor::GoToImplementation",
            "space f m": "editor::Format",
            "space x": "pane::CloseActiveItem",
            "space c r": "editor::Rename",
            "space e": "project_panel::ToggleFocus",
            "space f o": "outline::Toggle",
            "space f p": "projects::OpenRecent",
            "space f q": "file_finder::Toggle",
            "space g [": "editor::GoToPreviousHunk",
            "space g ]": "editor::GoToHunk",
            "space g b": "git::Blame",
            "space g d": "editor::ToggleSelectedDiffHunks",
            "space g r": "git::Restore",
            "space m o": "markdown::OpenPreview",
            "space m p": "markdown::OpenPreviewToTheSide",
            "space o": "tab_switcher::Toggle",
            "space p d": "diagnostics::Deploy",
            "space w c": "pane::CloseAllItems",
            "space w k": "pane::SplitUp",
            "space w j": "pane::SplitDown",
            "space w h": "pane::SplitLeft",
            "space w l": "pane::SplitRight"
        }
    },
    {
        "context": "ProjectPanel && not_editing",
        "bindings": {
            "j": "menu::SelectNext",
            "k": "menu::SelectPrevious",
            "a": "project_panel::NewFile",
            "A": "project_panel::NewDirectory",
            "c": "project_panel::Copy",
            "d": "project_panel::Delete",
            "p": "project_panel::Paste",
            "r": "project_panel::Rename",
            "x": "project_panel::Cut",
            "y p": "workspace::CopyPath",
            "y r": "workspace::CopyRelativePath"
        }
    },
    {
        "context": "Dock || Terminal || Editor",
        "bindings": {
            // "ctrl-h": ["workspace::ActivatePaneInDirection", "Left"],
            // "ctrl-l": ["workspace::ActivatePaneInDirection", "Right"],
            // "ctrl-k": ["workspace::ActivatePaneInDirection", "Up"],
            // "ctrl-j": ["workspace::ActivatePaneInDirection", "Down"]
        }
    },
    {
        "context": "Terminal",
        "bindings": {
            "ctrl-t": "workspace::ToggleBottomDock"
        }
    }
]
